// Code generated by gotype2cli; DO NOT EDIT.
package main

import (
	"reflect"
	"github.com/spf13/cobra"
	
	gotype2cli "github.com/pdcalado/gotype2cli/pkg"
)

func makeRepoCommand(
	fopts ...func(*gotype2cli.CreateCommandOptions),
) (*cobra.Command, error) {
	opts := gotype2cli.CreateCommandOptions{
		TypeName: "Repo",
		MethodArgs: map[string][]string{
			"CheckHealth": []string{ "ctx","host","port", },
			"Fetch": []string{ "ctx","host","port", },
			"New": []string{ "client", },
			
		},
		MethodDocs: map[string]string{
			"CheckHealth": "CheckHealth checks the health of a http server",
			"Fetch": "Fetch fetches something from a http server",
			"New": "New creates a new Repo",
			
		},
		Constructors: map[string]reflect.Value{
			"New": reflect.ValueOf(New),
		},
		ReceiverPrint: false,
	}

	for _, f := range fopts {
		f(&opts)
	}

	return gotype2cli.CreateCommand(
		reflect.TypeOf(Repo{}),
		&opts,
	)
}
